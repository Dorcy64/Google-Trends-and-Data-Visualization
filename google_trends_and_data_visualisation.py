# -*- coding: utf-8 -*-
"""Google Trends and Data Visualisation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nH3r54GHQx5_juYiWCX3Q5NiB_ZbBChs

# Introduction

Google Trends gives us an estimate of search volume. Let's explore if search popularity relates to other kinds of data. Perhaps there are patterns in Google's search volume and the price of Bitcoin or a hot stock like Tesla. Perhaps search volume for the term "Unemployment Benefits" can tell us something about the actual unemployment rate? 

Data Sources: <br>
<ul>
<li> <a href="https://fred.stlouisfed.org/series/UNRATE/">Unemployment Rate from FRED</a></li>
<li> <a href="https://trends.google.com/trends/explore">Google Trends</a> </li>  
<li> <a href="https://finance.yahoo.com/quote/TSLA/history?p=TSLA">Yahoo Finance for Tesla Stock Price</a> </li>    
<li> <a href="https://finance.yahoo.com/quote/BTC-USD/history?p=BTC-USD">Yahoo Finance for Bitcoin Stock Price</a> </li>
</ul>

# Import Statements
"""

import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.dates as mdates

"""# Read the Data

Download and add the .csv files to the same folder as your notebook.
"""

df_tesla = pd.read_csv('TESLA Search Trend vs Price.csv')

df_btc_search = pd.read_csv('Bitcoin Search Trend.csv')
df_btc_price = pd.read_csv('Daily Bitcoin Price.csv')

df_unemployment = pd.read_csv('UE Benefits Search vs UE Rate 2004-19.csv')

"""# Data Exploration

### Tesla
"""

print(df_tesla.shape)
print(df_tesla.head())

print(f'Largest value for Tesla in Web Search: {df_tesla["TSLA_WEB_SEARCH"].max()}')
print(f'Smallest value for Tesla in Web Search: {df_tesla["TSLA_WEB_SEARCH"].min()} ')

df_tesla.describe()

df_tesla.groupby("MONTH")

"""### Unemployment Data"""

print(df_unemployment.shape)
df_unemployment.head()

print('Largest value for "Unemployemnt Benefits" '
      f'in Web Search: {df_unemployment["UE_BENEFITS_WEB_SEARCH"].max()}')

df_unemployment.describe()

"""### Bitcoin"""

print(df_btc_search.shape)
df_btc_search.head()

df_btc_price.head()

print(f'largest BTC News Search: {df_btc_search["BTC_NEWS_SEARCH"].max()}')

"""# Data Cleaning

### Check for Missing Values
"""

print(f'Missing values for Tesla?: {df_tesla.isna().sum()}')
print(f'Missing values for U/E?: {df_unemployment.isna().sum()}')
print(f'Missing values for BTC Search?: {df_btc_search.isna().sum()}')

print(f'Missing values for BTC price?: {df_btc_price.isna().sum()}')

print(f'Number of missing values: 1')

df_btc_price = df_btc_price.dropna()

"""### Convert Strings to DateTime Objects"""

df_tesla["MONTH"] = pd.to_datetime(df_tesla["MONTH"], format="%Y-%m-%d")
df_tesla.head()

df_btc_price["DATE"] = pd.to_datetime(df_btc_price["DATE"], format="%Y-%m-%d")
df_btc_price.head()

df_btc_search["MONTH"] = pd.to_datetime(df_btc_search["MONTH"])
df_btc_search.head()

df_unemployment["MONTH"] = pd.to_datetime(df_unemployment["MONTH"], format="%Y-%m")
df_unemployment.head()

"""### Converting from Daily to Monthly Data

[Pandas .resample() documentation](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.resample.html) <br>
"""

df_btc_monthly = df_btc_price.resample("M", on="DATE").last()
print(df_btc_monthly.shape)
df_btc_monthly.head()



"""# Data Visualisation

### Notebook Formatting & Style Helpers
"""

# Create locators for ticks on the time axis
year = mdates.YearLocator()
month = mdates.MonthLocator()
years_fmt = mdates.DateFormatter("%Y")

# Register date converters to avoid warning messages

"""### Tesla Stock Price v.s. Search Volume"""

plt.figure(figsize=(14, 8), dpi=300)
plt.xticks(fontsize=14, rotation=45)
plt.title("Tesla Web Search vs Price", fontsize=14)
ax1 = plt.gca()
ax2 = ax1.twinx()
ax1.set_ylabel("Tesla Stock Price", color="Blue", fontsize=14)
ax2.set_ylabel("Search Trend", color="Red", fontsize=14)
ax1.plot(df_tesla["MONTH"], df_tesla["TSLA_USD_CLOSE"], color="Blue", linewidth=3)
ax2.plot(df_tesla["MONTH"], df_tesla["TSLA_WEB_SEARCH"], color="Red", linewidth=3)
ax1.set_xlim(left=df_tesla["MONTH"].min(), right=df_tesla["MONTH"].max())
ax1.set_ylim(0, 600)
ax1.xaxis.set_major_locator(year)
ax1.xaxis.set_major_formatter(years_fmt)
ax1.xaxis.set_minor_locator(month)
plt.show()

df_btc_monthly.head()

df_btc_search.head()

"""### Bitcoin (BTC) Price v.s. Search Volume"""

plt.figure(figsize=(14, 7), dpi=300)
plt.title("Bitcoin News Search vs Resampled Price", fontsize=16)
ax1 = plt.gca()
ax2 = ax1.twinx()
plt.xlim(df_btc_search["MONTH"].min(), df_btc_search["MONTH"].max())

ax1.xaxis.set_major_formatter(years_fmt)
ax1.xaxis.set_major_locator(year)
ax1.xaxis.set_minor_locator(month)

ax1.set_xlabel("DATE")
ax1.set_ylabel("BTC Price", color="orange", fontsize=14)
ax2.set_ylabel("BTC Search Volume", color="skyblue", fontsize=14)
ax1.plot(df_btc_monthly["DATE"], df_btc_monthly["CLOSE"], linewidth=2, color="orange", linestyle="dashed")
ax2.plot(df_btc_search["MONTH"], df_btc_search["BTC_NEWS_SEARCH"], linewidth=2, color="skyblue", marker="o")

df_unemployment.head()

"""### Unemployement Benefits Search vs. Actual Unemployment in the U.S."""

plt.figure(figsize=(14, 7), dpi=300)
plt.xticks(fontsize=14, rotation=45)
plt.grid(linestyle="--")
ax1 = plt.gca()
ax2 = ax1.twinx()
# Limits
plt.xlim(df_unemployment["MONTH"].min(), df_unemployment["MONTH"].max())
ax1.set_ylim(top=10.5, bottom=3)
ax1.xaxis.set_major_formatter(years_fmt)
ax1.xaxis.set_major_locator(year)
ax1.xaxis.set_minor_locator(month)

# Label
plt.title("US Monthly Search of \"Unemployment Benefits\" vs Unemployment Rate", fontsize=18)
ax1.set_ylabel("FRED U/E Rate", color="purple", fontsize=14)
ax2.set_ylabel("Search Trend", color="skyblue", fontsize=14)
ax2.set_xlabel("DATES", fontsize=14)
# Plot
ax2.plot(df_unemployment["MONTH"], df_unemployment["UE_BENEFITS_WEB_SEARCH"], color="skyblue", linewidth=3)
ax1.plot(df_unemployment["MONTH"], df_unemployment["UNRATE"], color="purple", linewidth=3)

rolll_df = df_unemployment[["UE_BENEFITS_WEB_SEARCH", "UNRATE"]].rolling(window=6).mean()
plt.figure(figsize=(14, 7), dpi=300)
plt.xticks(fontsize=14, rotation=45)
plt.grid(linestyle="--")
ax1 = plt.gca()
ax2 = ax1.twinx()

# Limits
plt.xlim(df_unemployment["MONTH"].min(), df_unemployment["MONTH"].max())
ax1.set_ylim(top=10.5, bottom=3)
ax1.xaxis.set_major_formatter(years_fmt)
ax1.xaxis.set_major_locator(year)
ax1.xaxis.set_minor_locator(month)

# Label
plt.title("US Monthly Search of \"Unemployment Benefits\" vs Unemployment Rate", fontsize=18)
ax1.set_ylabel("FRED U/E Rate", color="purple", fontsize=14)
ax2.set_ylabel("Search Trend", color="skyblue", fontsize=14)
ax2.set_xlabel("DATES", fontsize=14)
# Plot
ax2.plot(df_unemployment["MONTH"], roll_df["UE_BENEFITS_WEB_SEARCH"], color="skyblue", linewidth=3)
ax1.plot(df_unemployment["MONTH"], roll_df["UNRATE"], color="purple", linewidth=3, linestyle="-.")

"""### Including 2020 in Unemployment Charts"""

df_2020_unemployment = pd.read_csv("/content/UE Benefits Search vs UE Rate 2004-20.csv")
df_2020_unemployment["MONTH"] = pd.to_datetime(df_2020_unemployment["MONTH"])
df_2020_unemployment.head()

plt.figure(figsize=(10, 7), dpi=300)
plt.title("Monthly US \"Unemployment Benefits\" Web Search VS Unemplyement Rate", fontsize=12)
plt.xticks(rotation=45, fontsize=14)
ax1 = plt.gca()
ax2 = ax1.twinx()

ax1.set_ylabel("FRED U/E RATE", color="purple", fontsize=14)
ax2.set_ylabel("Unemployement Benefits Search", color="skyblue", fontsize=14)
ax1.set_xlabel("Dates", fontsize=14)

ax1.set_xlim(df_2020_unemployment["MONTH"].min(), df_2020_unemployment["MONTH"].max())

ax2.plot(df_2020_unemployment["MONTH"], df_2020_unemployment["UE_BENEFITS_WEB_SEARCH"], color="skyblue", linewidth=3)
ax1.plot(df_2020_unemployment["MONTH"], df_2020_unemployment["UNRATE"], color="purple", linewidth=3)